---
author: admin
comments: true
date: 2015-08-16 12:39:58+00:00
layout: post
slug: '%e5%a6%82%e4%bd%95%e8%ae%be%e8%ae%a1%e4%b8%80%e4%b8%aa%e5%a5%bd%e7%9a%84api'
title: 如何设计一个好的API
wordpress_id: 219
categories:
- PHP
---




设计一个好的API从来都不是易事，尤其是今天业务越来越复杂。(我的第一份正式的工作主要是跟API打交道的，我的毕业论文也是跟API有关_-_)




API的中文意为：应用程序接口。在开始设计API之前，需要注意的是：







**1 API的URI风格的一致性**










//good style




http://local.api.com/user  




http://local.api.com/friend 













//bad style




http://local.api.com/User 




http://local.api.com/friend










同一个API域下的规则应该保持一致，推荐使用全部小写。







**2 API的URI保持原子性**







一个URI应该处理一件事，尽量不要跟其他的API产生耦合，如




http://local.api.com/user 返回的结果为










`{`







`     ``"code"``:0,`




`     ``"msg"``:``"ok"``,`




`     ``"user"``:{`




`           ``"id"``:1,`




`           ``"name"``:``"root"`




`      ``}`







`}`




这是合理的，应该在返回的结果集中包含用户的数据，但切记包含其他无用的信息，尽管这些信息在业务里面可能需要，




如在这个API里面返回这个用户的好友列表和当天的天气，这将会是API难以维护。










**3 提前考虑好版本升级可能带来的各种问题**







版本问题是必须考虑的问题，当你升级一个版本，你应该尽可能的保证兼容（除非你有足够的理由），在进行版本的升级的时候，修改上一个API的返回参数是非常危险的。并且使你的调用者产生不信任感。







**4 有意义的URI映射到文件与Action**







这部分需要在设计和开发API的时候，尽量将URI使用PathInfo的模式（类似）设计，这样做的一个好处是，一旦API有任何差错，根据URI就可以定位到那个文件。







**题外话**




 使用REST设计API是一个非常棒的选择，它能使你的API更加优雅。REST是一种架构风格。






