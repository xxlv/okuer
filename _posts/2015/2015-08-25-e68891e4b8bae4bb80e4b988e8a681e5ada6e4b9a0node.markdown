---
author: admin
comments: true
date: 2015-08-25 12:52:35+00:00
layout: post
slug: '%e6%88%91%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e5%ad%a6%e4%b9%a0node'
title: 我为什么要学习Node
wordpress_id: 270
categories:
- NodeJS
---

学习一门编程语言从来都不是一件容易的事情，尤其是下定决定接触你并不熟悉的领域，尽管语言有些共性，但这也只能帮助你在理解一门新的语言的时候少走一些弯路。现代的各种语言和技术层出不穷，许多人都在争论到底要学java还是c#，而且由此引发许多的语言之争。
现代语言大致分为两类，一类是静态编译型语言，如java/c#等等，一类是动态解释型语言，如Python/PHP等。

在计算机如此飞速发展的今天，一门语言已经无法满足各个场景的需求。所有的技术的出现都有特定的场景，Node是众多语言中可以选择的一种，准确的讲，它不是一种新的语言，你没有必要学习它在语法上的差异，这些差异尽管有，但只占有极小的一部分。在谈论Node好或者不好之前，首先要考虑到的是我能用Node做什么？我用java执行速度非常快，我有必要切换到Node么？

**运行引擎**
说起Node，首先想到的是Node是基于V8引擎的，V8的速度是毋容置疑的，Chrome的成功V8必不可少。

**异步I/O**

异步I/0使得执行效率显著提升，如执行以下I/O任务，A,B,C，在传统的编程中，我们的执行顺序如下：

    
    do A;
    WAIT A done;
    do B;
    WAIT  B done;
    do C;
    WAIT  C done;




执行的时间是time=A+B+C
使用Node之后，执行的顺序是

    
    do A; callback(A done)
    do B; callback(B done)
    do C; callback(B done)




A的执行是异步的，也就是，当A运行之后，并不会立即返回结果，因为Node也不知道任务在什么时候完成，Node只会告诉你，“好的，我已经安排你的任务，请告诉我完成后我该干什么(callback)”。
所以你可以接着去完成下一个任务，而不是浪费时间在等待上，整个执行中，所花费的时间time=max(A,B,C),这显著的提升的执行的效率，也就是为什么Node如此擅长密集I/O的重要原因。





----未完待续

----Okuer
